// // // import { useMoveBack } from "../../../hooks/useMoveBack";
// // // import { motion } from "framer-motion";
// // // import { useEffect, useState } from "react";

// // // const VideoPlayer = () => {
// // //   const [videoUrl, setVideoUrl] = useState(null);
// // //   const moveBack = useMoveBack();

// // //   useEffect(() => {
// // //     // Get video URL from localStorage
// // //     const storedVideoUrl = localStorage.getItem("videoURL");
// // //     if (storedVideoUrl) {
// // //       setVideoUrl(storedVideoUrl);
// // //     }
// // //   }, []);

// // //   if (!videoUrl) {
// // //     return <div>Video URL not found in localStorage.</div>;
// // //   }

// // //   // Extract the video ID from the YouTube URL
// // //   let videoId = null;

// // //   // Check for different YouTube URL formats
// // //   if (videoUrl.includes("youtube.com/watch")) {
// // //     videoId = videoUrl.split("v=")[1]?.split("&")[0];
// // //   } else if (videoUrl.includes("youtu.be")) {
// // //     videoId = videoUrl.split("youtu.be/")[1];
// // //   }

// // //   if (!videoId) {
// // //     return <p>Invalid video URL</p>;
// // //   }

// // //   return (
// // //     <div className="container mt-10 mb-10 mx-auto p-4">
// // //       <h1 className="text-3xl font-bold text-center mb-6 text-gradient bg-gradient-to-r from-primaryBG to-GreidentColor2 bg-clip-text text-transparent">
// // //         تشغيل الفيديو
// // //       </h1>

// // //       <div className="video-container">
// // //         <iframe
// // //           width="600"
// // //           height="400"
// // //           src={`https://www.youtube.com/embed/${videoId}?controls=0&autoplay=1&rel=0&modestbranding=1&showinfo=0`}
// // //           // src={`https://www.youtube.com/embed/${videoId}?controls=0&autoplay=1&rel=0&modestbranding=1&showinfo=0`}
// // //           title="YouTube video player"
// // //           frameBorder="0"
// // //           allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
// // //           allowFullScreen
// // //         ></iframe>
// // //       </div>

// // //       <div className="w-full flex justify-center items-center mt-5">
// // //         <motion.button
// // //           onClick={moveBack}
// // //           className="bg-gradient-to-r from-primaryBG  to-GreidentColor2 text-white px-2 py-1 rounded-lg text-md transition-all duration-300 transform hover:scale-105 hover:shadow-gray-800 hover:shadow-xl"
// // //           initial={{ opacity: 0, y: 50 }}
// // //           animate={{ opacity: 1, y: 0 }}
// // //           transition={{ duration: 1, ease: "easeOut", delay: 1.2 }}
// // //           whileHover={{ scale: 1.05 }}
// // //           whileTap={{ scale: 0.95 }}
// // //         >
// // //           الرجوع للخلف
// // //         </motion.button>
// // //       </div>
// // //     </div>
// // //   );
// // // };

// // // export default VideoPlayer;
// // import { useMoveBack } from "../../../hooks/useMoveBack";
// // import { motion } from "framer-motion";
// // import { useEffect, useState } from "react";
// // import { useParams } from "react-router-dom"; // Import to get URL params

// // const VideoPlayer = () => {
// //   const { id } = useParams();
// //   console.log(id);
// //   // Extract the video ID from the URL params
// //   const [videoUrl, setVideoUrl] = useState(null);
// //   const moveBack = useMoveBack();

// //   useEffect(() => {
// //     // Iterate through localStorage keys to find a matching video ID
// //     for (let i = 0; i < localStorage.length; i++) {
// //       const key = localStorage.key(i);

// //       if (key === id) {
// //         // Check if the key matches the video ID in params
// //         const storedVideoUrl = localStorage.getItem(key);
// //         if (storedVideoUrl) {
// //           setVideoUrl(storedVideoUrl); // Set the video URL if the ID matches
// //         }
// //       }
// //     }
// //   }, [id]);

// //   if (!videoUrl) {
// //     return <div>Video URL not found or does not match ID.</div>;
// //   }

// //   // Extract the video ID from the YouTube URL
// //   let videoId = null;

// //   // Check for different YouTube URL formats
// //   if (videoUrl.includes("youtube.com/watch")) {
// //     videoId = videoUrl.split("v=")[1]?.split("&")[0];
// //   } else if (videoUrl.includes("youtu.be")) {
// //     videoId = videoUrl.split("youtu.be/")[1];
// //   }

// //   if (!videoId) {
// //     return <p>Invalid video URL</p>;
// //   }

// //   return (
// //     <div className="container mt-10 mb-10 mx-auto p-4">
// //       <h1 className="text-3xl font-bold text-center mb-6 text-gradient bg-gradient-to-r from-primaryBG to-GreidentColor2 bg-clip-text text-transparent">
// //         تشغيل الفيديو
// //       </h1>

// //       <div className="video-container">
// //         <iframe
// //           width="600"
// //           height="400"
// //           src={`https://www.youtube.com/embed/${videoId}?controls=0&autoplay=1&rel=0&modestbranding=1&showinfo=0`}
// //           // src={`https://www.youtube.com/embed/${videoId}?controls=0&autoplay=1&rel=0&modestbranding=1&showinfo=0`}
// //           title="YouTube video player"
// //           frameBorder="0"
// //           allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
// //           allowFullScreen
// //         ></iframe>
// //       </div>

// //       <div className="w-full flex justify-center items-center mt-5">
// //         <motion.button
// //           onClick={moveBack}
// //           className="bg-gradient-to-r from-primaryBG to-GreidentColor2 text-white px-2 py-1 rounded-lg text-md transition-all duration-300 transform hover:scale-105 hover:shadow-gray-800 hover:shadow-xl"
// //           initial={{ opacity: 0, y: 50 }}
// //           animate={{ opacity: 1, y: 0 }}
// //           transition={{ duration: 1, ease: "easeOut", delay: 1.2 }}
// //           whileHover={{ scale: 1.05 }}
// //           whileTap={{ scale: 0.95 }}
// //         >
// //           الرجوع للخلف
// //         </motion.button>
// //       </div>
// //     </div>
// //   );
// // };

// // export default VideoPlayer;
// import { useMoveBack } from "../../../hooks/useMoveBack";
// import { motion } from "framer-motion";
// import { useEffect, useState } from "react";
// import { useParams } from "react-router-dom"; // Import to get URL params

// const VideoPlayer = () => {
//   const { id } = useParams();
//   const [videoUrl, setVideoUrl] = useState(null);
//   const moveBack = useMoveBack();

//   useEffect(() => {
//     // Iterate through localStorage keys to find a matching video ID
//     for (let i = 0; i < localStorage.length; i++) {
//       const key = localStorage.key(i);
//       if (key === id) {
//         const storedVideoUrl = localStorage.getItem(key);
//         if (storedVideoUrl) {
//           setVideoUrl(storedVideoUrl);
//         }
//       }
//     }
//   }, [id]);

//   if (!videoUrl) {
//     return <div>Video URL not found or does not match ID.</div>;
//   }

//   // Extract the video ID from the YouTube URL
//   let videoId = null;
//   if (videoUrl.includes("youtube.com/watch")) {
//     videoId = videoUrl.split("v=")[1]?.split("&")[0];
//   } else if (videoUrl.includes("youtu.be")) {
//     videoId = videoUrl.split("youtu.be/")[1];
//   }

//   if (!videoId) {
//     return <p>Invalid video URL</p>;
//   }

//   return (
//     <div className="container mt-10 mb-10 mx-auto p-4">
//       <h1 className="text-3xl font-bold text-center mb-6 text-gradient bg-gradient-to-r from-primaryBG to-GreidentColor2 bg-clip-text text-transparent">
//         تشغيل الفيديو
//       </h1>

//       <div className="video-container">
//         <iframe
//           width="600"
//           height="400"
//           src={`https://www.youtube.com/embed/${videoId}?controls=0&autoplay=1&rel=0&modestbranding=1&showinfo=0`}
//           title="YouTube video player"
//           frameBorder="0"
//           allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
//           allowFullScreen
//         ></iframe>
//       </div>

//       <div className="w-full flex justify-center items-center mt-5">
//         <motion.button
//           onClick={moveBack}
//           className="bg-gradient-to-r from-primaryBG to-GreidentColor2 text-white px-2 py-1 rounded-lg text-md transition-all duration-300 transform hover:scale-105 hover:shadow-gray-800 hover:shadow-xl"
//           initial={{ opacity: 0, y: 50 }}
//           animate={{ opacity: 1, y: 0 }}
//           transition={{ duration: 1, ease: "easeOut", delay: 1.2 }}
//           whileHover={{ scale: 1.05 }}
//           whileTap={{ scale: 0.95 }}
//         >
//           الرجوع للخلف
//         </motion.button>
//       </div>
//     </div>
//   );
// };

// export default VideoPlayer;

import { useMoveBack } from "../../../hooks/useMoveBack";
import { motion } from "framer-motion";
import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";

const VideoPlayer = () => {
  const { id } = useParams();
  const [videoUrl, setVideoUrl] = useState(null);
  const [player, setPlayer] = useState(null);
  const moveBack = useMoveBack();

  useEffect(() => {
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key === id) {
        const storedVideoUrl = localStorage.getItem(key);
        if (storedVideoUrl) {
          setVideoUrl(storedVideoUrl);
        }
      }
    }
  }, [id]);

  useEffect(() => {
    if (videoUrl) {
      const videoId = getVideoId(videoUrl);
      if (videoId) {
        loadYouTubeAPI(videoId);
      }
    }
  }, [videoUrl]);

  const getVideoId = (url) => {
    let videoId = null;
    if (url.includes("youtube.com/watch")) {
      videoId = url.split("v=")[1]?.split("&")[0];
    } else if (url.includes("youtu.be")) {
      videoId = url.split("youtu.be/")[1];
    }
    return videoId;
  };

  const loadYouTubeAPI = (videoId) => {
    const tag = document.createElement("script");
    tag.src = "https://www.youtube.com/iframe_api";
    const firstScriptTag = document.getElementsByTagName("script")[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    window.onYouTubeIframeAPIReady = () => {
      const newPlayer = new window.YT.Player("player", {
        height: "400",
        width: "600",
        videoId,
        playerVars: {
          autoplay: 1,
          controls: 0,
          rel: 0,
          modestbranding: 1,
          showinfo: 0,
        },
        events: {
          onReady: (event) => setPlayer(event.target),
        },
      });
    };
  };

  const handlePlay = () => {
    player?.playVideo();
  };

  const handlePause = () => {
    player?.pauseVideo();
  };

  if (!videoUrl) {
    return <div>Video URL not found or does not match ID.</div>;
  }

  return (
    <div className="container mt-10 mb-10 mx-auto p-4">
      <h1 className="text-3xl font-bold text-center mb-6 text-gradient bg-gradient-to-r from-primaryBG to-GreidentColor2 bg-clip-text text-transparent">
        تشغيل الفيديو
      </h1>

      <div className="video-container">
        <div id="player"></div>
      </div>

      <div className="w-full flex justify-center items-center mt-5">
        <motion.button
          onClick={handlePlay}
          className="bg-gradient-to-r from-primaryBG to-GreidentColor2 text-white px-2 py-1 rounded-lg text-md transition-all duration-300"
        >
          Play
        </motion.button>
        <motion.button
          onClick={handlePause}
          className="bg-gradient-to-r from-primaryBG to-GreidentColor2 text-white px-2 py-1 rounded-lg text-md transition-all duration-300 ml-2"
        >
          Pause
        </motion.button>
        <motion.button
          onClick={moveBack}
          className="bg-gradient-to-r from-primaryBG to-GreidentColor2 text-white px-2 py-1 rounded-lg text-md transition-all duration-300 ml-2"
        >
          الرجوع للخلف
        </motion.button>
      </div>
    </div>
  );
};

export default VideoPlayer;
